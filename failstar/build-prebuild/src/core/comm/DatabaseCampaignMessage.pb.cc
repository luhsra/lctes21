// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DatabaseCampaignMessage.proto

#include "DatabaseCampaignMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_InjectionPointStepsMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_InjectionPointStepsMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InjectionPointMessage;
}  // namespace protobuf_InjectionPointStepsMessage_2eproto
class DatabaseCampaignMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatabaseCampaignMessage>
      _instance;
} _DatabaseCampaignMessage_default_instance_;
class DatabaseExperimentMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatabaseExperimentMessage>
      _instance;
} _DatabaseExperimentMessage_default_instance_;
namespace protobuf_DatabaseCampaignMessage_2eproto {
static void InitDefaultsDatabaseCampaignMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DatabaseCampaignMessage_default_instance_;
    new (ptr) ::DatabaseCampaignMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DatabaseCampaignMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DatabaseCampaignMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDatabaseCampaignMessage}, {
      &protobuf_InjectionPointStepsMessage_2eproto::scc_info_InjectionPointMessage.base,}};

static void InitDefaultsDatabaseExperimentMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DatabaseExperimentMessage_default_instance_;
    new (ptr) ::DatabaseExperimentMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DatabaseExperimentMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DatabaseExperimentMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDatabaseExperimentMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DatabaseCampaignMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DatabaseExperimentMessage.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, pilot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, injection_instr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, injection_instr_absolute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, data_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, data_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, variant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, benchmark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, injection_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, inject_bursts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseCampaignMessage, register_injection_mode_),
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  2,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseExperimentMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseExperimentMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseExperimentMessage, bitoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseExperimentMessage, original_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DatabaseExperimentMessage, injection_width_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::DatabaseCampaignMessage)},
  { 25, 33, sizeof(::DatabaseExperimentMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DatabaseCampaignMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DatabaseExperimentMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "DatabaseCampaignMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035DatabaseCampaignMessage.proto\032 google/"
      "protobuf/descriptor.proto\032 InjectionPoin"
      "tStepsMessage.proto\"\320\003\n\027DatabaseCampaign"
      "Message\022\026\n\010pilot_id\030\001 \002(\rB\004\360\347\017\001\022\035\n\017injec"
      "tion_instr\030\004 \002(\rB\004\370\347\017\001\022&\n\030injection_inst"
      "r_absolute\030\005 \001(\rB\004\370\347\017\001\022\032\n\014data_address\030\006"
      " \002(\rB\004\370\347\017\001\022\030\n\ndata_width\030\007 \002(\rB\004\370\347\017\001\022\025\n\007"
      "variant\030\010 \002(\tB\004\370\347\017\001\022\027\n\tbenchmark\030\t \002(\tB\004"
      "\370\347\017\001\0225\n\017injection_point\030\n \002(\0132\026.Injectio"
      "nPointMessageB\004\370\347\017\001\022\034\n\rinject_bursts\030\013 \002"
      "(\010:\005false\022T\n\027register_injection_mode\030\014 \001"
      "(\0162..DatabaseCampaignMessage.RegisterInj"
      "ectionMode:\003OFF\"E\n\025RegisterInjectionMode"
      "\022\007\n\003OFF\020\000\022\010\n\004AUTO\020\001\022\t\n\005FORCE\020\002\022\016\n\nRANDOM"
      "JUMP\020\003\"e\n\031DatabaseExperimentMessage\022\027\n\tb"
      "itoffset\030\001 \002(\rB\004\360\347\017\001\022\026\n\016original_value\030\002"
      " \002(\r\022\027\n\017injection_width\030\003 \002(\r:\?\n\017sql_pri"
      "mary_key\022\035.google.protobuf.FieldOptions\030"
      "\376\374\001 \001(\010:\005false::\n\nsql_ignore\022\035.google.pr"
      "otobuf.FieldOptions\030\377\374\001 \001(\010:\005false"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 794);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DatabaseCampaignMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::protobuf_InjectionPointStepsMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_DatabaseCampaignMessage_2eproto
const ::google::protobuf::EnumDescriptor* DatabaseCampaignMessage_RegisterInjectionMode_descriptor() {
  protobuf_DatabaseCampaignMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DatabaseCampaignMessage_2eproto::file_level_enum_descriptors[0];
}
bool DatabaseCampaignMessage_RegisterInjectionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DatabaseCampaignMessage_RegisterInjectionMode DatabaseCampaignMessage::OFF;
const DatabaseCampaignMessage_RegisterInjectionMode DatabaseCampaignMessage::AUTO;
const DatabaseCampaignMessage_RegisterInjectionMode DatabaseCampaignMessage::FORCE;
const DatabaseCampaignMessage_RegisterInjectionMode DatabaseCampaignMessage::RANDOMJUMP;
const DatabaseCampaignMessage_RegisterInjectionMode DatabaseCampaignMessage::RegisterInjectionMode_MIN;
const DatabaseCampaignMessage_RegisterInjectionMode DatabaseCampaignMessage::RegisterInjectionMode_MAX;
const int DatabaseCampaignMessage::RegisterInjectionMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DatabaseCampaignMessage::InitAsDefaultInstance() {
  ::_DatabaseCampaignMessage_default_instance_._instance.get_mutable()->injection_point_ = const_cast< ::InjectionPointMessage*>(
      ::InjectionPointMessage::internal_default_instance());
}
void DatabaseCampaignMessage::clear_injection_point() {
  if (injection_point_ != NULL) injection_point_->Clear();
  clear_has_injection_point();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatabaseCampaignMessage::kPilotIdFieldNumber;
const int DatabaseCampaignMessage::kInjectionInstrFieldNumber;
const int DatabaseCampaignMessage::kInjectionInstrAbsoluteFieldNumber;
const int DatabaseCampaignMessage::kDataAddressFieldNumber;
const int DatabaseCampaignMessage::kDataWidthFieldNumber;
const int DatabaseCampaignMessage::kVariantFieldNumber;
const int DatabaseCampaignMessage::kBenchmarkFieldNumber;
const int DatabaseCampaignMessage::kInjectionPointFieldNumber;
const int DatabaseCampaignMessage::kInjectBurstsFieldNumber;
const int DatabaseCampaignMessage::kRegisterInjectionModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatabaseCampaignMessage::DatabaseCampaignMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DatabaseCampaignMessage_2eproto::scc_info_DatabaseCampaignMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DatabaseCampaignMessage)
}
DatabaseCampaignMessage::DatabaseCampaignMessage(const DatabaseCampaignMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_variant()) {
    variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
  }
  benchmark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_benchmark()) {
    benchmark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.benchmark_);
  }
  if (from.has_injection_point()) {
    injection_point_ = new ::InjectionPointMessage(*from.injection_point_);
  } else {
    injection_point_ = NULL;
  }
  ::memcpy(&pilot_id_, &from.pilot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&register_injection_mode_) -
    reinterpret_cast<char*>(&pilot_id_)) + sizeof(register_injection_mode_));
  // @@protoc_insertion_point(copy_constructor:DatabaseCampaignMessage)
}

void DatabaseCampaignMessage::SharedCtor() {
  variant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  benchmark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&injection_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&register_injection_mode_) -
      reinterpret_cast<char*>(&injection_point_)) + sizeof(register_injection_mode_));
}

DatabaseCampaignMessage::~DatabaseCampaignMessage() {
  // @@protoc_insertion_point(destructor:DatabaseCampaignMessage)
  SharedDtor();
}

void DatabaseCampaignMessage::SharedDtor() {
  variant_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  benchmark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete injection_point_;
}

void DatabaseCampaignMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DatabaseCampaignMessage::descriptor() {
  ::protobuf_DatabaseCampaignMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatabaseCampaignMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatabaseCampaignMessage& DatabaseCampaignMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DatabaseCampaignMessage_2eproto::scc_info_DatabaseCampaignMessage.base);
  return *internal_default_instance();
}


void DatabaseCampaignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DatabaseCampaignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      variant_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      benchmark_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(injection_point_ != NULL);
      injection_point_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&pilot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&data_width_) -
        reinterpret_cast<char*>(&pilot_id_)) + sizeof(data_width_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&inject_bursts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&register_injection_mode_) -
        reinterpret_cast<char*>(&inject_bursts_)) + sizeof(register_injection_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DatabaseCampaignMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DatabaseCampaignMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pilot_id = 1 [(.sql_primary_key) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pilot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pilot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 injection_instr = 4 [(.sql_ignore) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_injection_instr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &injection_instr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 injection_instr_absolute = 5 [(.sql_ignore) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_injection_instr_absolute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &injection_instr_absolute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 data_address = 6 [(.sql_ignore) = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_data_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 data_width = 7 [(.sql_ignore) = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_data_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string variant = 8 [(.sql_ignore) = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_variant()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->variant().data(), static_cast<int>(this->variant().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DatabaseCampaignMessage.variant");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string benchmark = 9 [(.sql_ignore) = true];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_benchmark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->benchmark().data(), static_cast<int>(this->benchmark().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DatabaseCampaignMessage.benchmark");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .InjectionPointMessage injection_point = 10 [(.sql_ignore) = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_injection_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool inject_bursts = 11 [default = false];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_inject_bursts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inject_bursts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DatabaseCampaignMessage.RegisterInjectionMode register_injection_mode = 12 [default = OFF];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DatabaseCampaignMessage_RegisterInjectionMode_IsValid(value)) {
            set_register_injection_mode(static_cast< ::DatabaseCampaignMessage_RegisterInjectionMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DatabaseCampaignMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DatabaseCampaignMessage)
  return false;
#undef DO_
}

void DatabaseCampaignMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DatabaseCampaignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 pilot_id = 1 [(.sql_primary_key) = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pilot_id(), output);
  }

  // required uint32 injection_instr = 4 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->injection_instr(), output);
  }

  // optional uint32 injection_instr_absolute = 5 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->injection_instr_absolute(), output);
  }

  // required uint32 data_address = 6 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_address(), output);
  }

  // required uint32 data_width = 7 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->data_width(), output);
  }

  // required string variant = 8 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DatabaseCampaignMessage.variant");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->variant(), output);
  }

  // required string benchmark = 9 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->benchmark().data(), static_cast<int>(this->benchmark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DatabaseCampaignMessage.benchmark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->benchmark(), output);
  }

  // required .InjectionPointMessage injection_point = 10 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_injection_point(), output);
  }

  // required bool inject_bursts = 11 [default = false];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->inject_bursts(), output);
  }

  // optional .DatabaseCampaignMessage.RegisterInjectionMode register_injection_mode = 12 [default = OFF];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->register_injection_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DatabaseCampaignMessage)
}

::google::protobuf::uint8* DatabaseCampaignMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DatabaseCampaignMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 pilot_id = 1 [(.sql_primary_key) = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pilot_id(), target);
  }

  // required uint32 injection_instr = 4 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->injection_instr(), target);
  }

  // optional uint32 injection_instr_absolute = 5 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->injection_instr_absolute(), target);
  }

  // required uint32 data_address = 6 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_address(), target);
  }

  // required uint32 data_width = 7 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->data_width(), target);
  }

  // required string variant = 8 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->variant().data(), static_cast<int>(this->variant().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DatabaseCampaignMessage.variant");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->variant(), target);
  }

  // required string benchmark = 9 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->benchmark().data(), static_cast<int>(this->benchmark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DatabaseCampaignMessage.benchmark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->benchmark(), target);
  }

  // required .InjectionPointMessage injection_point = 10 [(.sql_ignore) = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_injection_point(), deterministic, target);
  }

  // required bool inject_bursts = 11 [default = false];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->inject_bursts(), target);
  }

  // optional .DatabaseCampaignMessage.RegisterInjectionMode register_injection_mode = 12 [default = OFF];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->register_injection_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DatabaseCampaignMessage)
  return target;
}

size_t DatabaseCampaignMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DatabaseCampaignMessage)
  size_t total_size = 0;

  if (has_variant()) {
    // required string variant = 8 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variant());
  }

  if (has_benchmark()) {
    // required string benchmark = 9 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->benchmark());
  }

  if (has_injection_point()) {
    // required .InjectionPointMessage injection_point = 10 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *injection_point_);
  }

  if (has_pilot_id()) {
    // required uint32 pilot_id = 1 [(.sql_primary_key) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pilot_id());
  }

  if (has_injection_instr()) {
    // required uint32 injection_instr = 4 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->injection_instr());
  }

  if (has_data_address()) {
    // required uint32 data_address = 6 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_address());
  }

  if (has_data_width()) {
    // required uint32 data_width = 7 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_width());
  }

  if (has_inject_bursts()) {
    // required bool inject_bursts = 11 [default = false];
    total_size += 1 + 1;
  }

  return total_size;
}
size_t DatabaseCampaignMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DatabaseCampaignMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001df) ^ 0x000001df) == 0) {  // All required fields are present.
    // required string variant = 8 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->variant());

    // required string benchmark = 9 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->benchmark());

    // required .InjectionPointMessage injection_point = 10 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *injection_point_);

    // required uint32 pilot_id = 1 [(.sql_primary_key) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pilot_id());

    // required uint32 injection_instr = 4 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->injection_instr());

    // required uint32 data_address = 6 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_address());

    // required uint32 data_width = 7 [(.sql_ignore) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_width());

    // required bool inject_bursts = 11 [default = false];
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 injection_instr_absolute = 5 [(.sql_ignore) = true];
  if (has_injection_instr_absolute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->injection_instr_absolute());
  }

  // optional .DatabaseCampaignMessage.RegisterInjectionMode register_injection_mode = 12 [default = OFF];
  if (has_register_injection_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->register_injection_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseCampaignMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DatabaseCampaignMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseCampaignMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatabaseCampaignMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DatabaseCampaignMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DatabaseCampaignMessage)
    MergeFrom(*source);
  }
}

void DatabaseCampaignMessage::MergeFrom(const DatabaseCampaignMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DatabaseCampaignMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_variant();
      variant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.variant_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_benchmark();
      benchmark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.benchmark_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_injection_point()->::InjectionPointMessage::MergeFrom(from.injection_point());
    }
    if (cached_has_bits & 0x00000008u) {
      pilot_id_ = from.pilot_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      injection_instr_ = from.injection_instr_;
    }
    if (cached_has_bits & 0x00000020u) {
      injection_instr_absolute_ = from.injection_instr_absolute_;
    }
    if (cached_has_bits & 0x00000040u) {
      data_address_ = from.data_address_;
    }
    if (cached_has_bits & 0x00000080u) {
      data_width_ = from.data_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      inject_bursts_ = from.inject_bursts_;
    }
    if (cached_has_bits & 0x00000200u) {
      register_injection_mode_ = from.register_injection_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DatabaseCampaignMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DatabaseCampaignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseCampaignMessage::CopyFrom(const DatabaseCampaignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DatabaseCampaignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseCampaignMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001df) != 0x000001df) return false;
  if (has_injection_point()) {
    if (!this->injection_point_->IsInitialized()) return false;
  }
  return true;
}

void DatabaseCampaignMessage::Swap(DatabaseCampaignMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatabaseCampaignMessage::InternalSwap(DatabaseCampaignMessage* other) {
  using std::swap;
  variant_.Swap(&other->variant_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  benchmark_.Swap(&other->benchmark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(injection_point_, other->injection_point_);
  swap(pilot_id_, other->pilot_id_);
  swap(injection_instr_, other->injection_instr_);
  swap(injection_instr_absolute_, other->injection_instr_absolute_);
  swap(data_address_, other->data_address_);
  swap(data_width_, other->data_width_);
  swap(inject_bursts_, other->inject_bursts_);
  swap(register_injection_mode_, other->register_injection_mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DatabaseCampaignMessage::GetMetadata() const {
  protobuf_DatabaseCampaignMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatabaseCampaignMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DatabaseExperimentMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatabaseExperimentMessage::kBitoffsetFieldNumber;
const int DatabaseExperimentMessage::kOriginalValueFieldNumber;
const int DatabaseExperimentMessage::kInjectionWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatabaseExperimentMessage::DatabaseExperimentMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DatabaseCampaignMessage_2eproto::scc_info_DatabaseExperimentMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DatabaseExperimentMessage)
}
DatabaseExperimentMessage::DatabaseExperimentMessage(const DatabaseExperimentMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bitoffset_, &from.bitoffset_,
    static_cast<size_t>(reinterpret_cast<char*>(&injection_width_) -
    reinterpret_cast<char*>(&bitoffset_)) + sizeof(injection_width_));
  // @@protoc_insertion_point(copy_constructor:DatabaseExperimentMessage)
}

void DatabaseExperimentMessage::SharedCtor() {
  ::memset(&bitoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&injection_width_) -
      reinterpret_cast<char*>(&bitoffset_)) + sizeof(injection_width_));
}

DatabaseExperimentMessage::~DatabaseExperimentMessage() {
  // @@protoc_insertion_point(destructor:DatabaseExperimentMessage)
  SharedDtor();
}

void DatabaseExperimentMessage::SharedDtor() {
}

void DatabaseExperimentMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DatabaseExperimentMessage::descriptor() {
  ::protobuf_DatabaseCampaignMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatabaseCampaignMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatabaseExperimentMessage& DatabaseExperimentMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DatabaseCampaignMessage_2eproto::scc_info_DatabaseExperimentMessage.base);
  return *internal_default_instance();
}


void DatabaseExperimentMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DatabaseExperimentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&bitoffset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&injection_width_) -
        reinterpret_cast<char*>(&bitoffset_)) + sizeof(injection_width_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DatabaseExperimentMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DatabaseExperimentMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 bitoffset = 1 [(.sql_primary_key) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bitoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 original_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_original_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &original_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 injection_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_injection_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &injection_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DatabaseExperimentMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DatabaseExperimentMessage)
  return false;
#undef DO_
}

void DatabaseExperimentMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DatabaseExperimentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 bitoffset = 1 [(.sql_primary_key) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bitoffset(), output);
  }

  // required uint32 original_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->original_value(), output);
  }

  // required uint32 injection_width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->injection_width(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DatabaseExperimentMessage)
}

::google::protobuf::uint8* DatabaseExperimentMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DatabaseExperimentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 bitoffset = 1 [(.sql_primary_key) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bitoffset(), target);
  }

  // required uint32 original_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->original_value(), target);
  }

  // required uint32 injection_width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->injection_width(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DatabaseExperimentMessage)
  return target;
}

size_t DatabaseExperimentMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DatabaseExperimentMessage)
  size_t total_size = 0;

  if (has_bitoffset()) {
    // required uint32 bitoffset = 1 [(.sql_primary_key) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bitoffset());
  }

  if (has_original_value()) {
    // required uint32 original_value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->original_value());
  }

  if (has_injection_width()) {
    // required uint32 injection_width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->injection_width());
  }

  return total_size;
}
size_t DatabaseExperimentMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DatabaseExperimentMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 bitoffset = 1 [(.sql_primary_key) = true];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bitoffset());

    // required uint32 original_value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->original_value());

    // required uint32 injection_width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->injection_width());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseExperimentMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DatabaseExperimentMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseExperimentMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatabaseExperimentMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DatabaseExperimentMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DatabaseExperimentMessage)
    MergeFrom(*source);
  }
}

void DatabaseExperimentMessage::MergeFrom(const DatabaseExperimentMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DatabaseExperimentMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bitoffset_ = from.bitoffset_;
    }
    if (cached_has_bits & 0x00000002u) {
      original_value_ = from.original_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      injection_width_ = from.injection_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DatabaseExperimentMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DatabaseExperimentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseExperimentMessage::CopyFrom(const DatabaseExperimentMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DatabaseExperimentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseExperimentMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void DatabaseExperimentMessage::Swap(DatabaseExperimentMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatabaseExperimentMessage::InternalSwap(DatabaseExperimentMessage* other) {
  using std::swap;
  swap(bitoffset_, other->bitoffset_);
  swap(original_value_, other->original_value_);
  swap(injection_width_, other->injection_width_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DatabaseExperimentMessage::GetMetadata() const {
  protobuf_DatabaseCampaignMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatabaseCampaignMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  sql_primary_key(kSqlPrimaryKeyFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  sql_ignore(kSqlIgnoreFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DatabaseCampaignMessage* Arena::CreateMaybeMessage< ::DatabaseCampaignMessage >(Arena* arena) {
  return Arena::CreateInternal< ::DatabaseCampaignMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DatabaseExperimentMessage* Arena::CreateMaybeMessage< ::DatabaseExperimentMessage >(Arena* arena) {
  return Arena::CreateInternal< ::DatabaseExperimentMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
