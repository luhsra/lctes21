// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TracePlugin.proto

#include "TracePlugin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_TracePlugin_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TracePlugin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Trace_Event_Extended_Registers;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TracePlugin_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Trace_Event_Extended_Stack;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TracePlugin_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Trace_Event_Extended;
}  // namespace protobuf_TracePlugin_2eproto
class Trace_Event_Extended_RegistersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trace_Event_Extended_Registers>
      _instance;
} _Trace_Event_Extended_Registers_default_instance_;
class Trace_Event_Extended_StackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trace_Event_Extended_Stack>
      _instance;
} _Trace_Event_Extended_Stack_default_instance_;
class Trace_Event_ExtendedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trace_Event_Extended>
      _instance;
} _Trace_Event_Extended_default_instance_;
class Trace_EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trace_Event>
      _instance;
} _Trace_Event_default_instance_;
namespace protobuf_TracePlugin_2eproto {
static void InitDefaultsTrace_Event_Extended_Registers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Trace_Event_Extended_Registers_default_instance_;
    new (ptr) ::Trace_Event_Extended_Registers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Trace_Event_Extended_Registers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Trace_Event_Extended_Registers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrace_Event_Extended_Registers}, {}};

static void InitDefaultsTrace_Event_Extended_Stack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Trace_Event_Extended_Stack_default_instance_;
    new (ptr) ::Trace_Event_Extended_Stack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Trace_Event_Extended_Stack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Trace_Event_Extended_Stack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrace_Event_Extended_Stack}, {}};

static void InitDefaultsTrace_Event_Extended() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Trace_Event_Extended_default_instance_;
    new (ptr) ::Trace_Event_Extended();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Trace_Event_Extended::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Trace_Event_Extended =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTrace_Event_Extended}, {
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended_Registers.base,
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended_Stack.base,}};

static void InitDefaultsTrace_Event() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Trace_Event_default_instance_;
    new (ptr) ::Trace_Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Trace_Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Trace_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTrace_Event}, {
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Trace_Event_Extended_Registers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trace_Event_Extended_Stack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trace_Event_Extended.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trace_Event.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Registers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Registers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Registers, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Registers, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Registers, value_deref_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Stack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Stack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended_Stack, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended, registers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event_Extended, stack_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, time_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, memaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, accesstype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Trace_Event, trace_ext_),
  1,
  3,
  2,
  4,
  5,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Trace_Event_Extended_Registers)},
  { 11, 17, sizeof(::Trace_Event_Extended_Stack)},
  { 18, 26, sizeof(::Trace_Event_Extended)},
  { 29, 40, sizeof(::Trace_Event)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Trace_Event_Extended_Registers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Trace_Event_Extended_Stack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Trace_Event_Extended_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Trace_Event_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "TracePlugin.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021TracePlugin.proto\"\331\001\n\024Trace_Event_Exte"
      "nded\022\014\n\004data\030\005 \001(\004\0222\n\tregisters\030\006 \003(\n2\037."
      "Trace_Event_Extended.Registers\022*\n\005stack\030"
      "\007 \003(\n2\033.Trace_Event_Extended.Stack\032;\n\tRe"
      "gisters\022\n\n\002id\030\001 \002(\r\022\r\n\005value\030\002 \001(\004\022\023\n\013va"
      "lue_deref\030\003 \001(\r\032\026\n\005Stack\022\r\n\005value\030\001 \002(\r\""
      "\307\001\n\013Trace_Event\022\n\n\002ip\030\001 \002(\004\022\022\n\ntime_delt"
      "a\030\006 \001(\003\022\017\n\007memaddr\030\002 \001(\004\022\r\n\005width\030\003 \001(\r\022"
      "+\n\naccesstype\030\004 \001(\0162\027.Trace_Event.Access"
      "Type\022(\n\ttrace_ext\030\005 \001(\0132\025.Trace_Event_Ex"
      "tended\"!\n\nAccessType\022\010\n\004READ\020\001\022\t\n\005WRITE\020"
      "\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TracePlugin.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_TracePlugin_2eproto
const ::google::protobuf::EnumDescriptor* Trace_Event_AccessType_descriptor() {
  protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TracePlugin_2eproto::file_level_enum_descriptors[0];
}
bool Trace_Event_AccessType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Trace_Event_AccessType Trace_Event::READ;
const Trace_Event_AccessType Trace_Event::WRITE;
const Trace_Event_AccessType Trace_Event::AccessType_MIN;
const Trace_Event_AccessType Trace_Event::AccessType_MAX;
const int Trace_Event::AccessType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Trace_Event_Extended_Registers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trace_Event_Extended_Registers::kIdFieldNumber;
const int Trace_Event_Extended_Registers::kValueFieldNumber;
const int Trace_Event_Extended_Registers::kValueDerefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trace_Event_Extended_Registers::Trace_Event_Extended_Registers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended_Registers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Trace_Event_Extended.Registers)
}
Trace_Event_Extended_Registers::Trace_Event_Extended_Registers(const Trace_Event_Extended_Registers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_deref_) -
    reinterpret_cast<char*>(&value_)) + sizeof(value_deref_));
  // @@protoc_insertion_point(copy_constructor:Trace_Event_Extended.Registers)
}

void Trace_Event_Extended_Registers::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_deref_) -
      reinterpret_cast<char*>(&value_)) + sizeof(value_deref_));
}

Trace_Event_Extended_Registers::~Trace_Event_Extended_Registers() {
  // @@protoc_insertion_point(destructor:Trace_Event_Extended.Registers)
  SharedDtor();
}

void Trace_Event_Extended_Registers::SharedDtor() {
}

void Trace_Event_Extended_Registers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trace_Event_Extended_Registers::descriptor() {
  ::protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trace_Event_Extended_Registers& Trace_Event_Extended_Registers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended_Registers.base);
  return *internal_default_instance();
}


void Trace_Event_Extended_Registers::Clear() {
// @@protoc_insertion_point(message_clear_start:Trace_Event_Extended.Registers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_deref_) -
        reinterpret_cast<char*>(&value_)) + sizeof(value_deref_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trace_Event_Extended_Registers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Trace_Event_Extended.Registers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value_deref = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_value_deref();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_deref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          input->SetLastTag(tag);
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Trace_Event_Extended.Registers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Trace_Event_Extended.Registers)
  return false;
#undef DO_
}

void Trace_Event_Extended_Registers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Trace_Event_Extended.Registers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  // optional uint32 value_deref = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value_deref(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Trace_Event_Extended.Registers)
}

::google::protobuf::uint8* Trace_Event_Extended_Registers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Trace_Event_Extended.Registers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  // optional uint32 value_deref = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value_deref(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Trace_Event_Extended.Registers)
  return target;
}

size_t Trace_Event_Extended_Registers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Trace_Event_Extended.Registers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  // optional uint64 value = 2;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  // optional uint32 value_deref = 3;
  if (has_value_deref()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value_deref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trace_Event_Extended_Registers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Trace_Event_Extended.Registers)
  GOOGLE_DCHECK_NE(&from, this);
  const Trace_Event_Extended_Registers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trace_Event_Extended_Registers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Trace_Event_Extended.Registers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Trace_Event_Extended.Registers)
    MergeFrom(*source);
  }
}

void Trace_Event_Extended_Registers::MergeFrom(const Trace_Event_Extended_Registers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Trace_Event_Extended.Registers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_deref_ = from.value_deref_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Trace_Event_Extended_Registers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Trace_Event_Extended.Registers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trace_Event_Extended_Registers::CopyFrom(const Trace_Event_Extended_Registers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Trace_Event_Extended.Registers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trace_Event_Extended_Registers::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Trace_Event_Extended_Registers::Swap(Trace_Event_Extended_Registers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trace_Event_Extended_Registers::InternalSwap(Trace_Event_Extended_Registers* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(id_, other->id_);
  swap(value_deref_, other->value_deref_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trace_Event_Extended_Registers::GetMetadata() const {
  protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trace_Event_Extended_Stack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trace_Event_Extended_Stack::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trace_Event_Extended_Stack::Trace_Event_Extended_Stack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended_Stack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Trace_Event_Extended.Stack)
}
Trace_Event_Extended_Stack::Trace_Event_Extended_Stack(const Trace_Event_Extended_Stack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Trace_Event_Extended.Stack)
}

void Trace_Event_Extended_Stack::SharedCtor() {
  value_ = 0u;
}

Trace_Event_Extended_Stack::~Trace_Event_Extended_Stack() {
  // @@protoc_insertion_point(destructor:Trace_Event_Extended.Stack)
  SharedDtor();
}

void Trace_Event_Extended_Stack::SharedDtor() {
}

void Trace_Event_Extended_Stack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trace_Event_Extended_Stack::descriptor() {
  ::protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trace_Event_Extended_Stack& Trace_Event_Extended_Stack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended_Stack.base);
  return *internal_default_instance();
}


void Trace_Event_Extended_Stack::Clear() {
// @@protoc_insertion_point(message_clear_start:Trace_Event_Extended.Stack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trace_Event_Extended_Stack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Trace_Event_Extended.Stack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          input->SetLastTag(tag);
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Trace_Event_Extended.Stack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Trace_Event_Extended.Stack)
  return false;
#undef DO_
}

void Trace_Event_Extended_Stack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Trace_Event_Extended.Stack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Trace_Event_Extended.Stack)
}

::google::protobuf::uint8* Trace_Event_Extended_Stack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Trace_Event_Extended.Stack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Trace_Event_Extended.Stack)
  return target;
}

size_t Trace_Event_Extended_Stack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Trace_Event_Extended.Stack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trace_Event_Extended_Stack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Trace_Event_Extended.Stack)
  GOOGLE_DCHECK_NE(&from, this);
  const Trace_Event_Extended_Stack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trace_Event_Extended_Stack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Trace_Event_Extended.Stack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Trace_Event_Extended.Stack)
    MergeFrom(*source);
  }
}

void Trace_Event_Extended_Stack::MergeFrom(const Trace_Event_Extended_Stack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Trace_Event_Extended.Stack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void Trace_Event_Extended_Stack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Trace_Event_Extended.Stack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trace_Event_Extended_Stack::CopyFrom(const Trace_Event_Extended_Stack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Trace_Event_Extended.Stack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trace_Event_Extended_Stack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Trace_Event_Extended_Stack::Swap(Trace_Event_Extended_Stack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trace_Event_Extended_Stack::InternalSwap(Trace_Event_Extended_Stack* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trace_Event_Extended_Stack::GetMetadata() const {
  protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trace_Event_Extended::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trace_Event_Extended::kDataFieldNumber;
const int Trace_Event_Extended::kRegistersFieldNumber;
const int Trace_Event_Extended::kStackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trace_Event_Extended::Trace_Event_Extended()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Trace_Event_Extended)
}
Trace_Event_Extended::Trace_Event_Extended(const Trace_Event_Extended& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      registers_(from.registers_),
      stack_(from.stack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Trace_Event_Extended)
}

void Trace_Event_Extended::SharedCtor() {
  data_ = GOOGLE_ULONGLONG(0);
}

Trace_Event_Extended::~Trace_Event_Extended() {
  // @@protoc_insertion_point(destructor:Trace_Event_Extended)
  SharedDtor();
}

void Trace_Event_Extended::SharedDtor() {
}

void Trace_Event_Extended::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trace_Event_Extended::descriptor() {
  ::protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trace_Event_Extended& Trace_Event_Extended::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TracePlugin_2eproto::scc_info_Trace_Event_Extended.base);
  return *internal_default_instance();
}


void Trace_Event_Extended::Clear() {
// @@protoc_insertion_point(message_clear_start:Trace_Event_Extended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  registers_.Clear();
  stack_.Clear();
  data_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trace_Event_Extended::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Trace_Event_Extended)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated group Registers = 6 { ... };
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(51u /* 51 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroup(6, input, add_registers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated group Stack = 7 { ... };
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(59u /* 59 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroup(7, input, add_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Trace_Event_Extended)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Trace_Event_Extended)
  return false;
#undef DO_
}

void Trace_Event_Extended::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Trace_Event_Extended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 data = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->data(), output);
  }

  // repeated group Registers = 6 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->registers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      6,
      this->registers(static_cast<int>(i)),
      output);
  }

  // repeated group Stack = 7 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      7,
      this->stack(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Trace_Event_Extended)
}

::google::protobuf::uint8* Trace_Event_Extended::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Trace_Event_Extended)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 data = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->data(), target);
  }

  // repeated group Registers = 6 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->registers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupToArray(
        6, this->registers(static_cast<int>(i)), deterministic, target);
  }

  // repeated group Stack = 7 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupToArray(
        7, this->stack(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Trace_Event_Extended)
  return target;
}

size_t Trace_Event_Extended::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Trace_Event_Extended)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated group Registers = 6 { ... };
  {
    unsigned int count = static_cast<unsigned int>(this->registers_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          this->registers(static_cast<int>(i)));
    }
  }

  // repeated group Stack = 7 { ... };
  {
    unsigned int count = static_cast<unsigned int>(this->stack_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          this->stack(static_cast<int>(i)));
    }
  }

  // optional uint64 data = 5;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trace_Event_Extended::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Trace_Event_Extended)
  GOOGLE_DCHECK_NE(&from, this);
  const Trace_Event_Extended* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trace_Event_Extended>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Trace_Event_Extended)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Trace_Event_Extended)
    MergeFrom(*source);
  }
}

void Trace_Event_Extended::MergeFrom(const Trace_Event_Extended& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Trace_Event_Extended)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  registers_.MergeFrom(from.registers_);
  stack_.MergeFrom(from.stack_);
  if (from.has_data()) {
    set_data(from.data());
  }
}

void Trace_Event_Extended::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Trace_Event_Extended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trace_Event_Extended::CopyFrom(const Trace_Event_Extended& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Trace_Event_Extended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trace_Event_Extended::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->registers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->stack())) return false;
  return true;
}

void Trace_Event_Extended::Swap(Trace_Event_Extended* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trace_Event_Extended::InternalSwap(Trace_Event_Extended* other) {
  using std::swap;
  CastToBase(&registers_)->InternalSwap(CastToBase(&other->registers_));
  CastToBase(&stack_)->InternalSwap(CastToBase(&other->stack_));
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trace_Event_Extended::GetMetadata() const {
  protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trace_Event::InitAsDefaultInstance() {
  ::_Trace_Event_default_instance_._instance.get_mutable()->trace_ext_ = const_cast< ::Trace_Event_Extended*>(
      ::Trace_Event_Extended::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trace_Event::kIpFieldNumber;
const int Trace_Event::kTimeDeltaFieldNumber;
const int Trace_Event::kMemaddrFieldNumber;
const int Trace_Event::kWidthFieldNumber;
const int Trace_Event::kAccesstypeFieldNumber;
const int Trace_Event::kTraceExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trace_Event::Trace_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TracePlugin_2eproto::scc_info_Trace_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Trace_Event)
}
Trace_Event::Trace_Event(const Trace_Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_trace_ext()) {
    trace_ext_ = new ::Trace_Event_Extended(*from.trace_ext_);
  } else {
    trace_ext_ = NULL;
  }
  ::memcpy(&ip_, &from.ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&accesstype_) -
    reinterpret_cast<char*>(&ip_)) + sizeof(accesstype_));
  // @@protoc_insertion_point(copy_constructor:Trace_Event)
}

void Trace_Event::SharedCtor() {
  ::memset(&trace_ext_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&trace_ext_)) + sizeof(width_));
  accesstype_ = 1;
}

Trace_Event::~Trace_Event() {
  // @@protoc_insertion_point(destructor:Trace_Event)
  SharedDtor();
}

void Trace_Event::SharedDtor() {
  if (this != internal_default_instance()) delete trace_ext_;
}

void Trace_Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trace_Event::descriptor() {
  ::protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trace_Event& Trace_Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TracePlugin_2eproto::scc_info_Trace_Event.base);
  return *internal_default_instance();
}


void Trace_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Trace_Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(trace_ext_ != NULL);
    trace_ext_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_) -
        reinterpret_cast<char*>(&ip_)) + sizeof(width_));
    accesstype_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trace_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Trace_Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 memaddr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_memaddr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memaddr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Trace_Event.AccessType accesstype = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Trace_Event_AccessType_IsValid(value)) {
            set_accesstype(static_cast< ::Trace_Event_AccessType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Trace_Event_Extended trace_ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trace_ext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_delta = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_time_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Trace_Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Trace_Event)
  return false;
#undef DO_
}

void Trace_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Trace_Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ip = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ip(), output);
  }

  // optional uint64 memaddr = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->memaddr(), output);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width(), output);
  }

  // optional .Trace_Event.AccessType accesstype = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->accesstype(), output);
  }

  // optional .Trace_Event_Extended trace_ext = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_trace_ext(), output);
  }

  // optional int64 time_delta = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->time_delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Trace_Event)
}

::google::protobuf::uint8* Trace_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Trace_Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 ip = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ip(), target);
  }

  // optional uint64 memaddr = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->memaddr(), target);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width(), target);
  }

  // optional .Trace_Event.AccessType accesstype = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->accesstype(), target);
  }

  // optional .Trace_Event_Extended trace_ext = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_trace_ext(), deterministic, target);
  }

  // optional int64 time_delta = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->time_delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Trace_Event)
  return target;
}

size_t Trace_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Trace_Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 ip = 1;
  if (has_ip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ip());
  }
  // optional .Trace_Event_Extended trace_ext = 5;
  if (has_trace_ext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trace_ext_);
  }

  if (_has_bits_[0 / 32] & 60u) {
    // optional uint64 memaddr = 2;
    if (has_memaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->memaddr());
    }

    // optional int64 time_delta = 6;
    if (has_time_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_delta());
    }

    // optional uint32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional .Trace_Event.AccessType accesstype = 4;
    if (has_accesstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->accesstype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trace_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Trace_Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Trace_Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trace_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Trace_Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Trace_Event)
    MergeFrom(*source);
  }
}

void Trace_Event::MergeFrom(const Trace_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Trace_Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_trace_ext()->::Trace_Event_Extended::MergeFrom(from.trace_ext());
    }
    if (cached_has_bits & 0x00000002u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000004u) {
      memaddr_ = from.memaddr_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_delta_ = from.time_delta_;
    }
    if (cached_has_bits & 0x00000010u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000020u) {
      accesstype_ = from.accesstype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Trace_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Trace_Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trace_Event::CopyFrom(const Trace_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Trace_Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trace_Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_trace_ext()) {
    if (!this->trace_ext_->IsInitialized()) return false;
  }
  return true;
}

void Trace_Event::Swap(Trace_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trace_Event::InternalSwap(Trace_Event* other) {
  using std::swap;
  swap(trace_ext_, other->trace_ext_);
  swap(ip_, other->ip_);
  swap(memaddr_, other->memaddr_);
  swap(time_delta_, other->time_delta_);
  swap(width_, other->width_);
  swap(accesstype_, other->accesstype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trace_Event::GetMetadata() const {
  protobuf_TracePlugin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TracePlugin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Trace_Event_Extended_Registers* Arena::CreateMaybeMessage< ::Trace_Event_Extended_Registers >(Arena* arena) {
  return Arena::CreateInternal< ::Trace_Event_Extended_Registers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Trace_Event_Extended_Stack* Arena::CreateMaybeMessage< ::Trace_Event_Extended_Stack >(Arena* arena) {
  return Arena::CreateInternal< ::Trace_Event_Extended_Stack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Trace_Event_Extended* Arena::CreateMaybeMessage< ::Trace_Event_Extended >(Arena* arena) {
  return Arena::CreateInternal< ::Trace_Event_Extended >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Trace_Event* Arena::CreateMaybeMessage< ::Trace_Event >(Arena* arena) {
  return Arena::CreateInternal< ::Trace_Event >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
