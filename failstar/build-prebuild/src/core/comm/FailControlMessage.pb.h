// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FailControlMessage.proto

#ifndef PROTOBUF_INCLUDED_FailControlMessage_2eproto
#define PROTOBUF_INCLUDED_FailControlMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FailControlMessage_2eproto 

namespace protobuf_FailControlMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_FailControlMessage_2eproto
class FailControlMessage;
class FailControlMessageDefaultTypeInternal;
extern FailControlMessageDefaultTypeInternal _FailControlMessage_default_instance_;
namespace google {
namespace protobuf {
template<> ::FailControlMessage* Arena::CreateMaybeMessage<::FailControlMessage>(Arena*);
}  // namespace protobuf
}  // namespace google

enum FailControlMessage_Command {
  FailControlMessage_Command_NEED_WORK = 0,
  FailControlMessage_Command_RESULT_FOLLOWS = 1,
  FailControlMessage_Command_WORK_FOLLOWS = 6,
  FailControlMessage_Command_COME_AGAIN = 7,
  FailControlMessage_Command_DIE = 8
};
bool FailControlMessage_Command_IsValid(int value);
const FailControlMessage_Command FailControlMessage_Command_Command_MIN = FailControlMessage_Command_NEED_WORK;
const FailControlMessage_Command FailControlMessage_Command_Command_MAX = FailControlMessage_Command_DIE;
const int FailControlMessage_Command_Command_ARRAYSIZE = FailControlMessage_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* FailControlMessage_Command_descriptor();
inline const ::std::string& FailControlMessage_Command_Name(FailControlMessage_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    FailControlMessage_Command_descriptor(), value);
}
inline bool FailControlMessage_Command_Parse(
    const ::std::string& name, FailControlMessage_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FailControlMessage_Command>(
    FailControlMessage_Command_descriptor(), name, value);
}
// ===================================================================

class FailControlMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FailControlMessage) */ {
 public:
  FailControlMessage();
  virtual ~FailControlMessage();

  FailControlMessage(const FailControlMessage& from);

  inline FailControlMessage& operator=(const FailControlMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FailControlMessage(FailControlMessage&& from) noexcept
    : FailControlMessage() {
    *this = ::std::move(from);
  }

  inline FailControlMessage& operator=(FailControlMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FailControlMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FailControlMessage* internal_default_instance() {
    return reinterpret_cast<const FailControlMessage*>(
               &_FailControlMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FailControlMessage* other);
  friend void swap(FailControlMessage& a, FailControlMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FailControlMessage* New() const final {
    return CreateMaybeMessage<FailControlMessage>(NULL);
  }

  FailControlMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FailControlMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FailControlMessage& from);
  void MergeFrom(const FailControlMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FailControlMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FailControlMessage_Command Command;
  static const Command NEED_WORK =
    FailControlMessage_Command_NEED_WORK;
  static const Command RESULT_FOLLOWS =
    FailControlMessage_Command_RESULT_FOLLOWS;
  static const Command WORK_FOLLOWS =
    FailControlMessage_Command_WORK_FOLLOWS;
  static const Command COME_AGAIN =
    FailControlMessage_Command_COME_AGAIN;
  static const Command DIE =
    FailControlMessage_Command_DIE;
  static inline bool Command_IsValid(int value) {
    return FailControlMessage_Command_IsValid(value);
  }
  static const Command Command_MIN =
    FailControlMessage_Command_Command_MIN;
  static const Command Command_MAX =
    FailControlMessage_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    FailControlMessage_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return FailControlMessage_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return FailControlMessage_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return FailControlMessage_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 workloadID = 2;
  int workloadid_size() const;
  void clear_workloadid();
  static const int kWorkloadIDFieldNumber = 2;
  ::google::protobuf::uint32 workloadid(int index) const;
  void set_workloadid(int index, ::google::protobuf::uint32 value);
  void add_workloadid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      workloadid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_workloadid();

  // required uint64 build_id = 3;
  bool has_build_id() const;
  void clear_build_id();
  static const int kBuildIdFieldNumber = 3;
  ::google::protobuf::uint64 build_id() const;
  void set_build_id(::google::protobuf::uint64 value);

  // required .FailControlMessage.Command command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::FailControlMessage_Command command() const;
  void set_command(::FailControlMessage_Command value);

  // optional uint32 job_size = 5;
  bool has_job_size() const;
  void clear_job_size();
  static const int kJobSizeFieldNumber = 5;
  ::google::protobuf::uint32 job_size() const;
  void set_job_size(::google::protobuf::uint32 value);

  // optional uint64 run_id = 4;
  bool has_run_id() const;
  void clear_run_id();
  static const int kRunIdFieldNumber = 4;
  ::google::protobuf::uint64 run_id() const;
  void set_run_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:FailControlMessage)
 private:
  void set_has_command();
  void clear_has_command();
  void set_has_build_id();
  void clear_has_build_id();
  void set_has_run_id();
  void clear_has_run_id();
  void set_has_job_size();
  void clear_has_job_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > workloadid_;
  ::google::protobuf::uint64 build_id_;
  int command_;
  ::google::protobuf::uint32 job_size_;
  ::google::protobuf::uint64 run_id_;
  friend struct ::protobuf_FailControlMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FailControlMessage

// required .FailControlMessage.Command command = 1;
inline bool FailControlMessage::has_command() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FailControlMessage::set_has_command() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FailControlMessage::clear_has_command() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FailControlMessage::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::FailControlMessage_Command FailControlMessage::command() const {
  // @@protoc_insertion_point(field_get:FailControlMessage.command)
  return static_cast< ::FailControlMessage_Command >(command_);
}
inline void FailControlMessage::set_command(::FailControlMessage_Command value) {
  assert(::FailControlMessage_Command_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:FailControlMessage.command)
}

// repeated uint32 workloadID = 2;
inline int FailControlMessage::workloadid_size() const {
  return workloadid_.size();
}
inline void FailControlMessage::clear_workloadid() {
  workloadid_.Clear();
}
inline ::google::protobuf::uint32 FailControlMessage::workloadid(int index) const {
  // @@protoc_insertion_point(field_get:FailControlMessage.workloadID)
  return workloadid_.Get(index);
}
inline void FailControlMessage::set_workloadid(int index, ::google::protobuf::uint32 value) {
  workloadid_.Set(index, value);
  // @@protoc_insertion_point(field_set:FailControlMessage.workloadID)
}
inline void FailControlMessage::add_workloadid(::google::protobuf::uint32 value) {
  workloadid_.Add(value);
  // @@protoc_insertion_point(field_add:FailControlMessage.workloadID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FailControlMessage::workloadid() const {
  // @@protoc_insertion_point(field_list:FailControlMessage.workloadID)
  return workloadid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FailControlMessage::mutable_workloadid() {
  // @@protoc_insertion_point(field_mutable_list:FailControlMessage.workloadID)
  return &workloadid_;
}

// required uint64 build_id = 3;
inline bool FailControlMessage::has_build_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FailControlMessage::set_has_build_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FailControlMessage::clear_has_build_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FailControlMessage::clear_build_id() {
  build_id_ = GOOGLE_ULONGLONG(0);
  clear_has_build_id();
}
inline ::google::protobuf::uint64 FailControlMessage::build_id() const {
  // @@protoc_insertion_point(field_get:FailControlMessage.build_id)
  return build_id_;
}
inline void FailControlMessage::set_build_id(::google::protobuf::uint64 value) {
  set_has_build_id();
  build_id_ = value;
  // @@protoc_insertion_point(field_set:FailControlMessage.build_id)
}

// optional uint64 run_id = 4;
inline bool FailControlMessage::has_run_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FailControlMessage::set_has_run_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FailControlMessage::clear_has_run_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FailControlMessage::clear_run_id() {
  run_id_ = GOOGLE_ULONGLONG(0);
  clear_has_run_id();
}
inline ::google::protobuf::uint64 FailControlMessage::run_id() const {
  // @@protoc_insertion_point(field_get:FailControlMessage.run_id)
  return run_id_;
}
inline void FailControlMessage::set_run_id(::google::protobuf::uint64 value) {
  set_has_run_id();
  run_id_ = value;
  // @@protoc_insertion_point(field_set:FailControlMessage.run_id)
}

// optional uint32 job_size = 5;
inline bool FailControlMessage::has_job_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FailControlMessage::set_has_job_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FailControlMessage::clear_has_job_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FailControlMessage::clear_job_size() {
  job_size_ = 0u;
  clear_has_job_size();
}
inline ::google::protobuf::uint32 FailControlMessage::job_size() const {
  // @@protoc_insertion_point(field_get:FailControlMessage.job_size)
  return job_size_;
}
inline void FailControlMessage::set_job_size(::google::protobuf::uint32 value) {
  set_has_job_size();
  job_size_ = value;
  // @@protoc_insertion_point(field_set:FailControlMessage.job_size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::FailControlMessage_Command> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FailControlMessage_Command>() {
  return ::FailControlMessage_Command_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_FailControlMessage_2eproto
